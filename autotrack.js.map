{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/constants.js","autotrack.js","lib/plugins/autotrack.js","lib/plugins/clean-url-tracker.js","lib/plugins/event-tracker.js","lib/plugins/impression-tracker.js","lib/plugins/media-query-tracker.js","lib/plugins/outbound-form-tracker.js","lib/plugins/outbound-link-tracker.js","lib/plugins/page-visibility-tracker.js","lib/plugins/social-widget-tracker.js","lib/plugins/url-change-tracker.js","lib/provide.js","lib/utilities.js","node_modules/date-now/index.js","node_modules/debounce/index.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/parse-url.js","node_modules/object-assign/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","DEV_ID","NULL_DIMENSION","2","Autotrack","console","error","provide","../provide","3","CleanUrlTracker","tracker","opts","this","assign","stripQuery","queryDimensionIndex","indexFilename","trailingSlash","overrideTrackerBuildHitTask","parseUrl","constants","prototype","cleanUrlTask","model","location","get","page","url","oldPath","pathname","newPath","parts","split","join","replace","isFilename","test","substr","set","query","search","originalTrackerBuildHitTask","bind","remove","originalTrackerSendHitTask","../constants","dom-utils/lib/parse-url","object-assign","4","EventTracker","window","addEventListener","events","attributePrefix","fieldsObj","hitFilter","handleEvents","selector","delegates","forEach","event","delegate","document","deep","useCapture","createFieldsObj","getAttributeFields","element","prefix","type","getAttribute","defaultFields","transport","attributeFields","userFields","hitType","send","Object","keys","key","destroy","../utilities","dom-utils/lib/delegate","5","ImpressionTracker","IntersectionObserver","MutationObserver","elements","rootMargin","handleDomMutations","walkNodeTree","handleIntersectionChanges","observeElement","unobserveElement","startObserving","data","deriveDataFromConfigOptions","items","elementMap","threshold","intersectionObserver","initIntersectionObserver","mutationObserver","initMutationObserver","domReady","item","id","push","trackFirstImpressionOnly","observe","body","childList","subtree","requestAnimationFrame","getElementById","mutations","mutation","addedEl","j","addedNodes","removedEl","k","removedNodes","node","callback","nodeType","child","childNodes","records","record","target","itemWasPreviouslyVisible","visible","intersectionRatio","handleImpression","splice","itemsReferencesId","some","unobserve","eventCategory","eventAction","eventLabel","disconnect","6","MediaQueryTracker","matchMedia","definitions","changeTemplate","changeTimeout","isObject","toArray","changeListeners","processMediaQueries","getMediaListener","media","mediaMap","debounce","definition","name","dimensionIndex","mediaName","getMatchName","addChangeListeners","match","matches","mql","fn","handleChanges","addListener","newValue","oldValue","listener","removeListener","7","OutboundFormTracker","formSelector","shouldTrackOutboundForm","handleFormSubmits","withTimeout","form","action","href","navigator","sendBeacon","preventDefault","hitCallback","submit","hostname","protocol","slice","8","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","link","9","PageVisibilityTracker","sessionTimeout","DEFAULT_SESSION_TIMEOUT","hiddenMetricIndex","visibleMetricIndex","visibilityState","lastVisibilityChangeTime","Date","handleVisibilityStateChange","overrideTrackerSendMethod","overrideTrackerSendHitTask","prevVisibilityState","sessionHasTimedOut","timeDeltaInSeconds","Math","round","eventValue","nonInteraction","metric","minutesSinceLastHit","lastHitTime","originalTrackerSendMethod","args","Array","arguments","firstArg","isPageview","apply","removeEventListener","10","SocialWidgetTracker","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","err","removeTwitterEventHandlers","unbind","Event","subscribe","removeFacebookEventHandlers","unsubscribe","region","socialNetwork","socialAction","socialTarget","screenName","screen_name","11","UrlChangeTracker","history","pushState","shouldTrackUrlChange","path","getPath","updateTrackerData","originalPushState","state","title","originalReplaceState","replaceState","shouldSendPageview","setTimeout","12","utilities","gaDevIds","pluginName","pluginConstructor","gaAlias","gaplugins","capitalize","./constants","./utilities","13","getAttributes","opt_tracker","opt_hitFilter","opt_target","originalBuildHitTask","buildHitTask","attributes","attribute","indexOf","value","field","camelCase","wait","called","str","p1","toUpperCase","charAt","isArray","toString","dom-utils/lib/get-attributes","14","now","getTime","15","func","immediate","later","last","timestamp","timeout","result","context","callNow","date-now","16","parents","shouldCheckSelf","parent","parentElements","concat","./matches","./parents","17","closest","ancestor","eventType","deepPath","delegateTarget","./closest","18","attrs","map","attr","19","matchesSelector","nativeMatches","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","20","list","21","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","createElement","cache","port","host","origin","hash","fragment","22","toObject","val","undefined","TypeError","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","source","from","symbols","to","getOwnPropertySymbols","23","./plugins/autotrack","./plugins/clean-url-tracker","./plugins/event-tracker","./plugins/impression-tracker","./plugins/media-query-tracker","./plugins/outbound-form-tracker","./plugins/outbound-link-tracker","./plugins/page-visibility-tracker","./plugins/social-widget-tracker","./plugins/url-change-tracker"],"mappings":"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","file":"autotrack.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  DEV_ID: 'i5iSjo',\n  NULL_DIMENSION: '(not set)'\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  DEV_ID: 'i5iSjo',\n  NULL_DIMENSION: '(not set)'\n};\n\n},{}],2:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint no-console: [\"error\", {allow: [\"error\"]}] */\n\n\n// Imports dependencies.\nvar provide = require('../provide');\n\n\n/**\n * Warns users that this functionality is deprecated as of version 1.0\n * @deprecated\n * @constructor\n */\nfunction Autotrack() {\n  console.error('Requiring the `autotrack` plugin no longer requires all ' +\n      'sub-plugins be default. See https://goo.gl/sZ2WrW for details.');\n}\n\n\nprovide('autotrack', Autotrack);\n\n},{\"../provide\":12}],3:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n},{\"../constants\":1,\"../provide\":12,\"dom-utils/lib/parse-url\":21,\"object-assign\":22}],4:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    attributePrefix: 'ga-',\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":17,\"object-assign\":22}],5:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar domReady = require('../utilities').domReady;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers impression tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction ImpressionTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n  this.opts = assign({\n    elements: [],\n    rootMargin: '0px',\n    attributePrefix: 'ga-',\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleDomMutations = this.handleDomMutations.bind(this);\n  this.walkNodeTree = this.walkNodeTree.bind(this);\n  this.handleIntersectionChanges = this.handleIntersectionChanges.bind(this);\n  this.observeElement = this.observeElement.bind(this);\n  this.unobserveElement = this.unobserveElement.bind(this);\n  this.startObserving = this.startObserving.bind(this);\n\n  var data = this.deriveDataFromConfigOptions();\n\n  // The primary list of elements to observe. Each item contains the\n  // element ID, threshold, and whether it's currently in-view.\n  this.items = data.items;\n\n  // A hash map of elements contained in the items array.\n  this.elementMap = data.elementMap;\n\n  // A sorted list of threshold values contained in the items array.\n  this.threshold = data.threshold;\n\n  this.intersectionObserver = this.initIntersectionObserver();\n  this.mutationObserver = this.initMutationObserver();\n\n  // Once the DOM is ready, start observing for changes.\n  domReady(this.startObserving);\n}\n\n\n/**\n * Loops through each element in the `elements` configuration option and\n * creates a map of element IDs currently being observed, a list of \"items\"\n * (which contains each element's `threshold` and `trackFirstImpressionOnly`\n * property), and a list of `threshold` values to pass to the\n * `IntersectionObserver` instance.\n * @return {Object} An object with the properties `items`, `elementMap`\n *     and `threshold`.\n */\nImpressionTracker.prototype.deriveDataFromConfigOptions = function() {\n  var items = [];\n  var elementMap = {};\n  var threshold = [];\n\n  this.opts.elements.forEach(function(item) {\n    // The item can be just a string if it's OK with all the defaults.\n    if (typeof item == 'string') item = {id: item};\n\n    items.push(item = assign({\n      threshold: 0,\n      trackFirstImpressionOnly: true\n    }, item));\n\n    elementMap[item.id] = null;\n    threshold.push(item.threshold);\n  });\n\n  return {\n    items: items,\n    elementMap: elementMap,\n    threshold: threshold\n  };\n};\n\n\n/**\n * Initializes a new `MutationObsever` instance and registers the callback.\n * @return {MutationObserver} The new MutationObserver instance.\n */\nImpressionTracker.prototype.initMutationObserver = function() {\n  return new MutationObserver(this.handleDomMutations);\n};\n\n\n/**\n * Initializes a new `IntersectionObsever` instance with the appropriate\n * options and registers the callback.\n * @return {IntersectionObserver} The newly created instance.\n */\nImpressionTracker.prototype.initIntersectionObserver = function() {\n  return new IntersectionObserver(this.handleIntersectionChanges, {\n    rootMargin: this.opts.rootMargin,\n    threshold: this.threshold\n  });\n};\n\n\n/**\n * Starts observing each eleemnt to intersections as well as the entire DOM\n * for node changes.\n */\nImpressionTracker.prototype.startObserving = function() {\n  // Start observing elements for intersections.\n  Object.keys(this.elementMap).forEach(this.observeElement);\n\n  // Start observing the DOM for added and removed elements.\n  this.mutationObserver.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n\n  // TODO(philipwalton): Remove temporary hack to force a new frame\n  // immediately after adding observers.\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n  requestAnimationFrame(function() {});\n};\n\n\n/**\n * Adds an element to the `elementMap` map and registers it for observation\n * on `this.intersectionObserver`.\n * @param {string} id The ID of the element to observe.\n */\nImpressionTracker.prototype.observeElement = function(id) {\n  var element = this.elementMap[id] ||\n      (this.elementMap[id] = document.getElementById(id));\n\n  if (element) this.intersectionObserver.observe(element);\n};\n\n\n/**\n * Handles nodes being added or removed from the DOM. This function is passed\n * as the callback to `this.mutationObserver`.\n * @param {Array} mutations A list of `MutationRecord` instances\n */\nImpressionTracker.prototype.handleDomMutations = function(mutations) {\n  for (var i = 0, mutation; mutation = mutations[i]; i++) {\n\n    // Handles added elements.\n    for (var j = 0, addedEl; addedEl = mutation.addedNodes[j]; j++) {\n      this.walkNodeTree(addedEl, this.observeElement);\n    }\n\n    // Handles removed elements.\n    for (var k = 0, removedEl; removedEl = mutation.removedNodes[k]; k++) {\n      this.walkNodeTree(removedEl, this.unobserveElement);\n    }\n  }\n};\n\n\n/**\n * Iterates through all descendents of a DOM node and invokes the passed\n * callback if any of them match an elememt in `elementMap`.\n * @param {Node} node The DOM node to walk.\n * @param {Function} callback A function to be invoked if a match is found.\n */\nImpressionTracker.prototype.walkNodeTree = function(node, callback) {\n  if (node.nodeType == 1 && node.id in this.elementMap) {\n    callback(node.id);\n  }\n  for (var i = 0, child; child = node.childNodes[i]; i++) {\n    this.walkNodeTree(child, callback);\n  }\n};\n\n\n/**\n * Handles intersection changes. This function is passed as the callback to\n * `this.intersectionObserver`\n * @param {Array} records A list of `IntersectionObserverEntry` records.\n */\nImpressionTracker.prototype.handleIntersectionChanges = function(records) {\n  for (var i = 0, record; record = records[i]; i++) {\n    for (var j = 0, item; item = this.items[j]; j++) {\n      if (record.target.id !== item.id) continue;\n\n      var itemWasPreviouslyVisible = item.visible;\n      item.visible = (item.threshold === 0) ? !itemWasPreviouslyVisible :\n          record.intersectionRatio >= item.threshold;\n\n      if (item.visible && !itemWasPreviouslyVisible) {\n        this.handleImpression(item.id);\n\n        if (item.trackFirstImpressionOnly) {\n          this.items.splice(j, 1);\n          j--;\n          this.unobserveElement(item.id);\n        }\n      }\n    }\n  }\n\n  // If all items have been removed, remove the plugin.\n  if (this.items.length === 0) this.remove();\n};\n\n\n/**\n * Accpets an element ID that should be unobserved and does so unless it's\n * still referenced by another item in `this.items`.\n * @param {string} id The ID of the element to unobserve\n */\nImpressionTracker.prototype.unobserveElement = function(id) {\n  var itemsReferencesId = this.items.some(function(item) {\n    return id == item.id;\n  });\n\n  if (!itemsReferencesId) {\n    this.intersectionObserver.unobserve(this.elementMap[id]);\n    delete this.elementMap[id];\n  }\n};\n\n\n/**\n * Sends a hit to Google Analytics with the impression data.\n * @param {string} id The ID of the element making the impression.\n */\nImpressionTracker.prototype.handleImpression = function(id) {\n  var element = document.getElementById(id);\n\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Viewport',\n    eventAction: 'impression',\n    eventLabel: id\n  };\n\n  var userFields = assign({}, this.opts.fieldsObj,\n      getAttributeFields(element, this.opts.attributePrefix));\n\n  this.tracker.send('event', createFieldsObj(defaultFields,\n      userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all listeners and observers.\n */\nImpressionTracker.prototype.remove = function() {\n  this.mutationObserver.disconnect();\n  this.intersectionObserver.disconnect();\n};\n\n\nprovide('impressionTracker', ImpressionTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"object-assign\":22}],6:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n},{\"../constants\":1,\"../provide\":12,\"../utilities\":13,\"debounce\":15,\"object-assign\":22}],7:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\nvar withTimeout = require('../utilities').withTimeout;\n\n\n/**\n * Registers outbound form tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundFormTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    formSelector: 'form',\n    shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.delegate = delegate(document, 'submit', 'form',\n      this.handleFormSubmits.bind(this), {deep: true, useCapture: true});\n}\n\n\n/**\n * Handles all submits on form elements. A form submit is considered outbound\n * if its action attribute starts with http and does not contain\n * location.hostname.\n * When the beacon transport method is not available, the event's default\n * action is prevented and re-emitted after the hit is sent.\n * @param {Event} event The DOM submit event.\n * @param {Element} form The delegated event target.\n */\nOutboundFormTracker.prototype.handleFormSubmits = function(event, form) {\n\n  var action = parseUrl(form.action).href;\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Outbound Form',\n    eventAction: 'submit',\n    eventLabel: action\n  };\n\n  if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n\n    if (!navigator.sendBeacon) {\n      // Stops the submit and waits until the hit is complete (with timeout)\n      // for browsers that don't support beacon.\n      event.preventDefault();\n      defaultFields.hitCallback = withTimeout(function() {\n        form.submit();\n      });\n    }\n\n    var userFields = assign({}, this.opts.fieldsObj, getAttributeFields(form));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, form));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a form is\n * submitted. By default, forms with an action attribute that starts with\n * \"http\" and doesn't contain the current hostname are tracked.\n * @param {Element} form The form that was submitted.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the form should be tracked.\n */\nOutboundFormTracker.prototype.shouldTrackOutboundForm =\n    function(form, parseUrl) {\n\n  var url = parseUrl(form.action);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundFormTracker.prototype.remove = function() {\n  this.delegate.destroy();\n};\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":17,\"dom-utils/lib/parse-url\":21,\"object-assign\":22}],8:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link its hostname property does not match location.hostname. When the beacon\n * transport method is not available, the links target is set to \"_blank\" to\n * ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n    var userFields = assign({}, this.opts.fieldsObj, getAttributeFields(link));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":17,\"dom-utils/lib/parse-url\":21,\"object-assign\":22}],9:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"object-assign\":22}],10:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"object-assign\":22}],11:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\n/**\n * Adds handler for the history API methods\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction UrlChangeTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n    if (!history.pushState || !window.addEventListener) return;\n\n  this.opts = assign({\n    shouldTrackUrlChange: this.shouldTrackUrlChange,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Sets the initial page field.\n  // Don't set this on the tracker yet so campaign data can be retreived\n  // from the location field.\n  this.path = getPath();\n\n  this.updateTrackerData = this.updateTrackerData.bind(this);\n\n  // Overrides history.pushState.\n  this.originalPushState = history.pushState;\n  history.pushState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalPushState.apply(history, arguments);\n    this.updateTrackerData();\n  }.bind(this);\n\n  // Overrides history.repaceState.\n  this.originalReplaceState = history.replaceState;\n  history.replaceState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalReplaceState.apply(history, arguments);\n    this.updateTrackerData(false);\n  }.bind(this);\n\n  // Handles URL changes via user interaction.\n  window.addEventListener('popstate', this.updateTrackerData);\n}\n\n\n/**\n * Updates the page and title fields on the tracker if necessary and\n * optionally sends a pageview.\n * @param {boolean} shouldSendPageview Indicates whether the tracker should\n *     send a pageview after updating the URL.\n */\nUrlChangeTracker.prototype.updateTrackerData = function(shouldSendPageview) {\n\n  // Sets the default.\n  shouldSendPageview = shouldSendPageview === false ? false : true;\n\n  // Calls the update logic asychronously to help ensure user callbacks\n  // happen first.\n  setTimeout(function() {\n\n    var oldPath = this.path;\n    var newPath = getPath();\n\n    if (oldPath != newPath &&\n        this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n\n      this.path = newPath;\n      this.tracker.set({\n        page: newPath,\n        title: isObject(history.state) && history.state.title || document.title\n      });\n\n      if (shouldSendPageview) {\n        var defaultFields = {transport: 'beacon'};\n        this.tracker.send('pageview', createFieldsObj(defaultFields,\n            this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n  }.bind(this), 0);\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit with the new page\n * data. This default implementation can be overrided in the config options.\n * @param {string} newPath The path prior to the URL change.\n * @param {string} oldPath The path after the URL change.\n * @return {boolean} Whether or not the URL change should be tracked.\n */\nUrlChangeTracker.prototype.shouldTrackUrlChange = function(newPath, oldPath) {\n  return newPath && oldPath;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nUrlChangeTracker.prototype.remove = function() {\n  window.removeEventListener('popstate', this.updateTrackerData);\n  history.replaceState = this.originalReplaceState;\n  history.pushState = this.originalPushState;\n\n  this.tracker = null;\n  this.opts = null;\n  this.path = null;\n\n  this.updateTrackerData = null;\n  this.originalReplaceState = null;\n  this.originalPushState = null;\n};\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n\n},{\"../provide\":12,\"../utilities\":13,\"object-assign\":22}],12:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":1,\"./utilities\":13}],13:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n\n},{\"dom-utils/lib/get-attributes\":18,\"object-assign\":22}],14:[function(require,module,exports){\nmodule.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n},{}],15:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n},{\"date-now\":14}],16:[function(require,module,exports){\nvar matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n\n},{\"./matches\":19,\"./parents\":20}],17:[function(require,module,exports){\nvar closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n\n},{\"./closest\":16,\"./matches\":19}],18:[function(require,module,exports){\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n\n},{}],19:[function(require,module,exports){\nvar proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n\n},{}],20:[function(require,module,exports){\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n\n},{}],21:[function(require,module,exports){\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n\n},{}],22:[function(require,module,exports){\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],23:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Imports all sub-plugins.\nrequire('./plugins/clean-url-tracker');\nrequire('./plugins/event-tracker');\nrequire('./plugins/impression-tracker');\nrequire('./plugins/media-query-tracker');\nrequire('./plugins/outbound-form-tracker');\nrequire('./plugins/outbound-link-tracker');\nrequire('./plugins/page-visibility-tracker');\nrequire('./plugins/social-widget-tracker');\nrequire('./plugins/url-change-tracker');\n\n// Imports the deprecated autotrack plugin for backwards compatibility.\nrequire('./plugins/autotrack');\n\n},{\"./plugins/autotrack\":2,\"./plugins/clean-url-tracker\":3,\"./plugins/event-tracker\":4,\"./plugins/impression-tracker\":5,\"./plugins/media-query-tracker\":6,\"./plugins/outbound-form-tracker\":7,\"./plugins/outbound-link-tracker\":8,\"./plugins/page-visibility-tracker\":9,\"./plugins/social-widget-tracker\":10,\"./plugins/url-change-tracker\":11}]},{},[23])\n\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint no-console: [\"error\", {allow: [\"error\"]}] */\n\n\n// Imports dependencies.\nvar provide = require('../provide');\n\n\n/**\n * Warns users that this functionality is deprecated as of version 1.0\n * @deprecated\n * @constructor\n */\nfunction Autotrack() {\n  console.error('Requiring the `autotrack` plugin no longer requires all ' +\n      'sub-plugins be default. See https://goo.gl/sZ2WrW for details.');\n}\n\n\nprovide('autotrack', Autotrack);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    attributePrefix: 'ga-',\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar domReady = require('../utilities').domReady;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers impression tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction ImpressionTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n  this.opts = assign({\n    elements: [],\n    rootMargin: '0px',\n    attributePrefix: 'ga-',\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleDomMutations = this.handleDomMutations.bind(this);\n  this.walkNodeTree = this.walkNodeTree.bind(this);\n  this.handleIntersectionChanges = this.handleIntersectionChanges.bind(this);\n  this.observeElement = this.observeElement.bind(this);\n  this.unobserveElement = this.unobserveElement.bind(this);\n  this.startObserving = this.startObserving.bind(this);\n\n  var data = this.deriveDataFromConfigOptions();\n\n  // The primary list of elements to observe. Each item contains the\n  // element ID, threshold, and whether it's currently in-view.\n  this.items = data.items;\n\n  // A hash map of elements contained in the items array.\n  this.elementMap = data.elementMap;\n\n  // A sorted list of threshold values contained in the items array.\n  this.threshold = data.threshold;\n\n  this.intersectionObserver = this.initIntersectionObserver();\n  this.mutationObserver = this.initMutationObserver();\n\n  // Once the DOM is ready, start observing for changes.\n  domReady(this.startObserving);\n}\n\n\n/**\n * Loops through each element in the `elements` configuration option and\n * creates a map of element IDs currently being observed, a list of \"items\"\n * (which contains each element's `threshold` and `trackFirstImpressionOnly`\n * property), and a list of `threshold` values to pass to the\n * `IntersectionObserver` instance.\n * @return {Object} An object with the properties `items`, `elementMap`\n *     and `threshold`.\n */\nImpressionTracker.prototype.deriveDataFromConfigOptions = function() {\n  var items = [];\n  var elementMap = {};\n  var threshold = [];\n\n  this.opts.elements.forEach(function(item) {\n    // The item can be just a string if it's OK with all the defaults.\n    if (typeof item == 'string') item = {id: item};\n\n    items.push(item = assign({\n      threshold: 0,\n      trackFirstImpressionOnly: true\n    }, item));\n\n    elementMap[item.id] = null;\n    threshold.push(item.threshold);\n  });\n\n  return {\n    items: items,\n    elementMap: elementMap,\n    threshold: threshold\n  };\n};\n\n\n/**\n * Initializes a new `MutationObsever` instance and registers the callback.\n * @return {MutationObserver} The new MutationObserver instance.\n */\nImpressionTracker.prototype.initMutationObserver = function() {\n  return new MutationObserver(this.handleDomMutations);\n};\n\n\n/**\n * Initializes a new `IntersectionObsever` instance with the appropriate\n * options and registers the callback.\n * @return {IntersectionObserver} The newly created instance.\n */\nImpressionTracker.prototype.initIntersectionObserver = function() {\n  return new IntersectionObserver(this.handleIntersectionChanges, {\n    rootMargin: this.opts.rootMargin,\n    threshold: this.threshold\n  });\n};\n\n\n/**\n * Starts observing each eleemnt to intersections as well as the entire DOM\n * for node changes.\n */\nImpressionTracker.prototype.startObserving = function() {\n  // Start observing elements for intersections.\n  Object.keys(this.elementMap).forEach(this.observeElement);\n\n  // Start observing the DOM for added and removed elements.\n  this.mutationObserver.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n\n  // TODO(philipwalton): Remove temporary hack to force a new frame\n  // immediately after adding observers.\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n  requestAnimationFrame(function() {});\n};\n\n\n/**\n * Adds an element to the `elementMap` map and registers it for observation\n * on `this.intersectionObserver`.\n * @param {string} id The ID of the element to observe.\n */\nImpressionTracker.prototype.observeElement = function(id) {\n  var element = this.elementMap[id] ||\n      (this.elementMap[id] = document.getElementById(id));\n\n  if (element) this.intersectionObserver.observe(element);\n};\n\n\n/**\n * Handles nodes being added or removed from the DOM. This function is passed\n * as the callback to `this.mutationObserver`.\n * @param {Array} mutations A list of `MutationRecord` instances\n */\nImpressionTracker.prototype.handleDomMutations = function(mutations) {\n  for (var i = 0, mutation; mutation = mutations[i]; i++) {\n\n    // Handles added elements.\n    for (var j = 0, addedEl; addedEl = mutation.addedNodes[j]; j++) {\n      this.walkNodeTree(addedEl, this.observeElement);\n    }\n\n    // Handles removed elements.\n    for (var k = 0, removedEl; removedEl = mutation.removedNodes[k]; k++) {\n      this.walkNodeTree(removedEl, this.unobserveElement);\n    }\n  }\n};\n\n\n/**\n * Iterates through all descendents of a DOM node and invokes the passed\n * callback if any of them match an elememt in `elementMap`.\n * @param {Node} node The DOM node to walk.\n * @param {Function} callback A function to be invoked if a match is found.\n */\nImpressionTracker.prototype.walkNodeTree = function(node, callback) {\n  if (node.nodeType == 1 && node.id in this.elementMap) {\n    callback(node.id);\n  }\n  for (var i = 0, child; child = node.childNodes[i]; i++) {\n    this.walkNodeTree(child, callback);\n  }\n};\n\n\n/**\n * Handles intersection changes. This function is passed as the callback to\n * `this.intersectionObserver`\n * @param {Array} records A list of `IntersectionObserverEntry` records.\n */\nImpressionTracker.prototype.handleIntersectionChanges = function(records) {\n  for (var i = 0, record; record = records[i]; i++) {\n    for (var j = 0, item; item = this.items[j]; j++) {\n      if (record.target.id !== item.id) continue;\n\n      var itemWasPreviouslyVisible = item.visible;\n      item.visible = (item.threshold === 0) ? !itemWasPreviouslyVisible :\n          record.intersectionRatio >= item.threshold;\n\n      if (item.visible && !itemWasPreviouslyVisible) {\n        this.handleImpression(item.id);\n\n        if (item.trackFirstImpressionOnly) {\n          this.items.splice(j, 1);\n          j--;\n          this.unobserveElement(item.id);\n        }\n      }\n    }\n  }\n\n  // If all items have been removed, remove the plugin.\n  if (this.items.length === 0) this.remove();\n};\n\n\n/**\n * Accpets an element ID that should be unobserved and does so unless it's\n * still referenced by another item in `this.items`.\n * @param {string} id The ID of the element to unobserve\n */\nImpressionTracker.prototype.unobserveElement = function(id) {\n  var itemsReferencesId = this.items.some(function(item) {\n    return id == item.id;\n  });\n\n  if (!itemsReferencesId) {\n    this.intersectionObserver.unobserve(this.elementMap[id]);\n    delete this.elementMap[id];\n  }\n};\n\n\n/**\n * Sends a hit to Google Analytics with the impression data.\n * @param {string} id The ID of the element making the impression.\n */\nImpressionTracker.prototype.handleImpression = function(id) {\n  var element = document.getElementById(id);\n\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Viewport',\n    eventAction: 'impression',\n    eventLabel: id\n  };\n\n  var userFields = assign({}, this.opts.fieldsObj,\n      getAttributeFields(element, this.opts.attributePrefix));\n\n  this.tracker.send('event', createFieldsObj(defaultFields,\n      userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all listeners and observers.\n */\nImpressionTracker.prototype.remove = function() {\n  this.mutationObserver.disconnect();\n  this.intersectionObserver.disconnect();\n};\n\n\nprovide('impressionTracker', ImpressionTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\nvar withTimeout = require('../utilities').withTimeout;\n\n\n/**\n * Registers outbound form tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundFormTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    formSelector: 'form',\n    shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.delegate = delegate(document, 'submit', 'form',\n      this.handleFormSubmits.bind(this), {deep: true, useCapture: true});\n}\n\n\n/**\n * Handles all submits on form elements. A form submit is considered outbound\n * if its action attribute starts with http and does not contain\n * location.hostname.\n * When the beacon transport method is not available, the event's default\n * action is prevented and re-emitted after the hit is sent.\n * @param {Event} event The DOM submit event.\n * @param {Element} form The delegated event target.\n */\nOutboundFormTracker.prototype.handleFormSubmits = function(event, form) {\n\n  var action = parseUrl(form.action).href;\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Outbound Form',\n    eventAction: 'submit',\n    eventLabel: action\n  };\n\n  if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n\n    if (!navigator.sendBeacon) {\n      // Stops the submit and waits until the hit is complete (with timeout)\n      // for browsers that don't support beacon.\n      event.preventDefault();\n      defaultFields.hitCallback = withTimeout(function() {\n        form.submit();\n      });\n    }\n\n    var userFields = assign({}, this.opts.fieldsObj, getAttributeFields(form));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, form));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a form is\n * submitted. By default, forms with an action attribute that starts with\n * \"http\" and doesn't contain the current hostname are tracked.\n * @param {Element} form The form that was submitted.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the form should be tracked.\n */\nOutboundFormTracker.prototype.shouldTrackOutboundForm =\n    function(form, parseUrl) {\n\n  var url = parseUrl(form.action);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundFormTracker.prototype.remove = function() {\n  this.delegate.destroy();\n};\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link its hostname property does not match location.hostname. When the beacon\n * transport method is not available, the links target is set to \"_blank\" to\n * ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n    var userFields = assign({}, this.opts.fieldsObj, getAttributeFields(link));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\n/**\n * Adds handler for the history API methods\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction UrlChangeTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n    if (!history.pushState || !window.addEventListener) return;\n\n  this.opts = assign({\n    shouldTrackUrlChange: this.shouldTrackUrlChange,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Sets the initial page field.\n  // Don't set this on the tracker yet so campaign data can be retreived\n  // from the location field.\n  this.path = getPath();\n\n  this.updateTrackerData = this.updateTrackerData.bind(this);\n\n  // Overrides history.pushState.\n  this.originalPushState = history.pushState;\n  history.pushState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalPushState.apply(history, arguments);\n    this.updateTrackerData();\n  }.bind(this);\n\n  // Overrides history.repaceState.\n  this.originalReplaceState = history.replaceState;\n  history.replaceState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalReplaceState.apply(history, arguments);\n    this.updateTrackerData(false);\n  }.bind(this);\n\n  // Handles URL changes via user interaction.\n  window.addEventListener('popstate', this.updateTrackerData);\n}\n\n\n/**\n * Updates the page and title fields on the tracker if necessary and\n * optionally sends a pageview.\n * @param {boolean} shouldSendPageview Indicates whether the tracker should\n *     send a pageview after updating the URL.\n */\nUrlChangeTracker.prototype.updateTrackerData = function(shouldSendPageview) {\n\n  // Sets the default.\n  shouldSendPageview = shouldSendPageview === false ? false : true;\n\n  // Calls the update logic asychronously to help ensure user callbacks\n  // happen first.\n  setTimeout(function() {\n\n    var oldPath = this.path;\n    var newPath = getPath();\n\n    if (oldPath != newPath &&\n        this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n\n      this.path = newPath;\n      this.tracker.set({\n        page: newPath,\n        title: isObject(history.state) && history.state.title || document.title\n      });\n\n      if (shouldSendPageview) {\n        var defaultFields = {transport: 'beacon'};\n        this.tracker.send('pageview', createFieldsObj(defaultFields,\n            this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n  }.bind(this), 0);\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit with the new page\n * data. This default implementation can be overrided in the config options.\n * @param {string} newPath The path prior to the URL change.\n * @param {string} oldPath The path after the URL change.\n * @return {boolean} Whether or not the URL change should be tracked.\n */\nUrlChangeTracker.prototype.shouldTrackUrlChange = function(newPath, oldPath) {\n  return newPath && oldPath;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nUrlChangeTracker.prototype.remove = function() {\n  window.removeEventListener('popstate', this.updateTrackerData);\n  history.replaceState = this.originalReplaceState;\n  history.pushState = this.originalPushState;\n\n  this.tracker = null;\n  this.opts = null;\n  this.path = null;\n\n  this.updateTrackerData = null;\n  this.originalReplaceState = null;\n  this.originalPushState = null;\n};\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","var matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n","var closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n","var proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n","var HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"],"sourceRoot":"/source/"}