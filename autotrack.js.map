{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/constants.js","autotrack.js","lib/plugins/autotrack.js","lib/plugins/clean-url-tracker.js","lib/plugins/event-tracker.js","lib/plugins/impression-tracker.js","lib/plugins/media-query-tracker.js","lib/plugins/outbound-form-tracker.js","lib/plugins/outbound-link-tracker.js","lib/plugins/page-visibility-tracker.js","lib/plugins/social-widget-tracker.js","lib/plugins/url-change-tracker.js","lib/provide.js","lib/usage.js","lib/utilities.js","node_modules/date-now/index.js","node_modules/debounce/index.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/parse-url.js","node_modules/object-assign/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","2","Autotrack","console","error","provide","../provide","3","CleanUrlTracker","tracker","opts","usage","track","plugins","CLEAN_URL_TRACKER","this","assign","stripQuery","queryDimensionIndex","indexFilename","trailingSlash","overrideTrackerBuildHitTask","parseUrl","constants","prototype","cleanUrlTask","model","location","get","page","url","oldPath","pathname","newPath","parts","split","join","replace","isFilename","test","substr","set","query","search","originalTrackerBuildHitTask","bind","remove","originalTrackerSendHitTask","../constants","../usage","dom-utils/lib/parse-url","object-assign","4","EventTracker","EVENT_TRACKER","window","addEventListener","events","fieldsObj","attributePrefix","hitFilter","handleEvents","selector","delegates","forEach","event","delegate","document","deep","useCapture","createFieldsObj","getAttributeFields","element","prefix","type","getAttribute","defaultFields","transport","attributeFields","userFields","hitType","send","Object","keys","key","destroy","../utilities","dom-utils/lib/delegate","5","ImpressionTracker","IMPRESSION_TRACKER","IntersectionObserver","MutationObserver","elements","rootMargin","handleDomMutations","walkNodeTree","handleIntersectionChanges","observeElement","unobserveElement","startObserving","data","deriveDataFromConfigOptions","items","elementMap","threshold","intersectionObserver","initIntersectionObserver","mutationObserver","initMutationObserver","domReady","item","id","push","trackFirstImpressionOnly","observe","body","childList","subtree","requestAnimationFrame","getElementById","mutations","mutation","addedEl","j","addedNodes","removedEl","k","removedNodes","node","callback","nodeType","child","childNodes","records","record","target","itemWasPreviouslyVisible","visible","intersectionRatio","handleImpression","splice","itemsReferencesId","some","unobserve","eventCategory","eventAction","eventLabel","disconnect","6","MediaQueryTracker","MEDIA_QUERY_TRACKER","matchMedia","definitions","changeTemplate","changeTimeout","isObject","toArray","changeListeners","processMediaQueries","getMediaListener","media","mediaMap","debounce","definition","name","dimensionIndex","mediaName","getMatchName","addChangeListeners","match","matches","mql","fn","handleChanges","addListener","newValue","oldValue","listener","removeListener","7","OutboundFormTracker","OUTBOUND_FORM_TRACKER","formSelector","shouldTrackOutboundForm","handleFormSubmits","withTimeout","form","action","href","navigator","sendBeacon","preventDefault","hitCallback","submit","hostname","protocol","slice","8","OutboundLinkTracker","OUTBOUND_LINK_TRACKER","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","link","9","PageVisibilityTracker","PAGE_VISIBILITY_TRACKER","sessionTimeout","DEFAULT_SESSION_TIMEOUT","hiddenMetricIndex","visibleMetricIndex","visibilityState","lastVisibilityChangeTime","Date","handleVisibilityStateChange","overrideTrackerSendMethod","overrideTrackerSendHitTask","prevVisibilityState","sessionHasTimedOut","timeDeltaInSeconds","Math","round","eventValue","nonInteraction","metric","minutesSinceLastHit","lastHitTime","originalTrackerSendMethod","args","Array","arguments","firstArg","isPageview","apply","removeEventListener","10","SocialWidgetTracker","SOCIAL_WIDGET_TRACKER","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","err","removeTwitterEventHandlers","unbind","Event","subscribe","removeFacebookEventHandlers","unsubscribe","region","socialNetwork","socialAction","socialTarget","screenName","screen_name","11","UrlChangeTracker","URL_CHANGE_TRACKER","history","pushState","shouldTrackUrlChange","path","getPath","updateTrackerData","originalPushState","state","title","originalReplaceState","replaceState","shouldSendPageview","setTimeout","12","utilities","gaDevIds","pluginName","pluginConstructor","gaAlias","gaplugins","capitalize","./constants","./utilities","13","convertHexToBin","hex","parseInt","toString","convertBinToHex","bin","padZeros","str","len","toAdd","flipBitOn","index","trackPlugin","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","trackVersion","plugin","14","getAttributes","opt_tracker","opt_hitFilter","opt_target","originalBuildHitTask","buildHitTask","attributes","attribute","indexOf","value","field","camelCase","wait","called","p1","toUpperCase","charAt","isArray","dom-utils/lib/get-attributes","15","now","getTime","16","func","immediate","later","last","timestamp","timeout","result","context","callNow","date-now","17","parents","shouldCheckSelf","parent","parentElements","concat","./matches","./parents","18","closest","ancestor","eventType","deepPath","delegateTarget","./closest","19","attrs","map","attr","20","matchesSelector","nativeMatches","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","21","list","22","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","createElement","cache","port","host","origin","hash","fragment","23","toObject","val","undefined","TypeError","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","source","from","symbols","to","getOwnPropertySymbols","24","./plugins/autotrack","./plugins/clean-url-tracker","./plugins/event-tracker","./plugins/impression-tracker","./plugins/media-query-tracker","./plugins/outbound-form-tracker","./plugins/outbound-link-tracker","./plugins/page-visibility-tracker","./plugins/social-widget-tracker","./plugins/url-change-tracker"],"mappings":"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","file":"autotrack.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n\n},{}],2:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint no-console: [\"error\", {allow: [\"error\"]}] */\n\n\n// Imports dependencies.\nvar provide = require('../provide');\n\n\n/**\n * Warns users that this functionality is deprecated as of version 1.0\n * @deprecated\n * @constructor\n */\nfunction Autotrack() {\n  console.error('Requiring the `autotrack` plugin no longer requires all ' +\n      'sub-plugins be default. See https://goo.gl/sZ2WrW for details.');\n}\n\n\nprovide('autotrack', Autotrack);\n\n},{\"../provide\":12}],3:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n},{\"../constants\":1,\"../provide\":12,\"../usage\":13,\"dom-utils/lib/parse-url\":22,\"object-assign\":23}],4:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"dom-utils/lib/delegate\":18,\"object-assign\":23}],5:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar domReady = require('../utilities').domReady;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers impression tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction ImpressionTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.IMPRESSION_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n  this.opts = assign({\n    elements: [],\n    rootMargin: '0px',\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleDomMutations = this.handleDomMutations.bind(this);\n  this.walkNodeTree = this.walkNodeTree.bind(this);\n  this.handleIntersectionChanges = this.handleIntersectionChanges.bind(this);\n  this.observeElement = this.observeElement.bind(this);\n  this.unobserveElement = this.unobserveElement.bind(this);\n  this.startObserving = this.startObserving.bind(this);\n\n  var data = this.deriveDataFromConfigOptions();\n\n  // The primary list of elements to observe. Each item contains the\n  // element ID, threshold, and whether it's currently in-view.\n  this.items = data.items;\n\n  // A hash map of elements contained in the items array.\n  this.elementMap = data.elementMap;\n\n  // A sorted list of threshold values contained in the items array.\n  this.threshold = data.threshold;\n\n  this.intersectionObserver = this.initIntersectionObserver();\n  this.mutationObserver = this.initMutationObserver();\n\n  // Once the DOM is ready, start observing for changes.\n  domReady(this.startObserving);\n}\n\n\n/**\n * Loops through each element in the `elements` configuration option and\n * creates a map of element IDs currently being observed, a list of \"items\"\n * (which contains each element's `threshold` and `trackFirstImpressionOnly`\n * property), and a list of `threshold` values to pass to the\n * `IntersectionObserver` instance.\n * @return {Object} An object with the properties `items`, `elementMap`\n *     and `threshold`.\n */\nImpressionTracker.prototype.deriveDataFromConfigOptions = function() {\n  var items = [];\n  var elementMap = {};\n  var threshold = [];\n\n  this.opts.elements.forEach(function(item) {\n    // The item can be just a string if it's OK with all the defaults.\n    if (typeof item == 'string') item = {id: item};\n\n    items.push(item = assign({\n      threshold: 0,\n      trackFirstImpressionOnly: true\n    }, item));\n\n    elementMap[item.id] = null;\n    threshold.push(item.threshold);\n  });\n\n  return {\n    items: items,\n    elementMap: elementMap,\n    threshold: threshold\n  };\n};\n\n\n/**\n * Initializes a new `MutationObsever` instance and registers the callback.\n * @return {MutationObserver} The new MutationObserver instance.\n */\nImpressionTracker.prototype.initMutationObserver = function() {\n  return new MutationObserver(this.handleDomMutations);\n};\n\n\n/**\n * Initializes a new `IntersectionObsever` instance with the appropriate\n * options and registers the callback.\n * @return {IntersectionObserver} The newly created instance.\n */\nImpressionTracker.prototype.initIntersectionObserver = function() {\n  return new IntersectionObserver(this.handleIntersectionChanges, {\n    rootMargin: this.opts.rootMargin,\n    threshold: this.threshold\n  });\n};\n\n\n/**\n * Starts observing each eleemnt to intersections as well as the entire DOM\n * for node changes.\n */\nImpressionTracker.prototype.startObserving = function() {\n  // Start observing elements for intersections.\n  Object.keys(this.elementMap).forEach(this.observeElement);\n\n  // Start observing the DOM for added and removed elements.\n  this.mutationObserver.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n\n  // TODO(philipwalton): Remove temporary hack to force a new frame\n  // immediately after adding observers.\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n  requestAnimationFrame(function() {});\n};\n\n\n/**\n * Adds an element to the `elementMap` map and registers it for observation\n * on `this.intersectionObserver`.\n * @param {string} id The ID of the element to observe.\n */\nImpressionTracker.prototype.observeElement = function(id) {\n  var element = this.elementMap[id] ||\n      (this.elementMap[id] = document.getElementById(id));\n\n  if (element) this.intersectionObserver.observe(element);\n};\n\n\n/**\n * Handles nodes being added or removed from the DOM. This function is passed\n * as the callback to `this.mutationObserver`.\n * @param {Array} mutations A list of `MutationRecord` instances\n */\nImpressionTracker.prototype.handleDomMutations = function(mutations) {\n  for (var i = 0, mutation; mutation = mutations[i]; i++) {\n\n    // Handles added elements.\n    for (var j = 0, addedEl; addedEl = mutation.addedNodes[j]; j++) {\n      this.walkNodeTree(addedEl, this.observeElement);\n    }\n\n    // Handles removed elements.\n    for (var k = 0, removedEl; removedEl = mutation.removedNodes[k]; k++) {\n      this.walkNodeTree(removedEl, this.unobserveElement);\n    }\n  }\n};\n\n\n/**\n * Iterates through all descendents of a DOM node and invokes the passed\n * callback if any of them match an elememt in `elementMap`.\n * @param {Node} node The DOM node to walk.\n * @param {Function} callback A function to be invoked if a match is found.\n */\nImpressionTracker.prototype.walkNodeTree = function(node, callback) {\n  if (node.nodeType == 1 && node.id in this.elementMap) {\n    callback(node.id);\n  }\n  for (var i = 0, child; child = node.childNodes[i]; i++) {\n    this.walkNodeTree(child, callback);\n  }\n};\n\n\n/**\n * Handles intersection changes. This function is passed as the callback to\n * `this.intersectionObserver`\n * @param {Array} records A list of `IntersectionObserverEntry` records.\n */\nImpressionTracker.prototype.handleIntersectionChanges = function(records) {\n  for (var i = 0, record; record = records[i]; i++) {\n    for (var j = 0, item; item = this.items[j]; j++) {\n      if (record.target.id !== item.id) continue;\n\n      var itemWasPreviouslyVisible = item.visible;\n      item.visible = (item.threshold === 0) ? !itemWasPreviouslyVisible :\n          record.intersectionRatio >= item.threshold;\n\n      if (item.visible && !itemWasPreviouslyVisible) {\n        this.handleImpression(item.id);\n\n        if (item.trackFirstImpressionOnly) {\n          this.items.splice(j, 1);\n          j--;\n          this.unobserveElement(item.id);\n        }\n      }\n    }\n  }\n\n  // If all items have been removed, remove the plugin.\n  if (this.items.length === 0) this.remove();\n};\n\n\n/**\n * Accpets an element ID that should be unobserved and does so unless it's\n * still referenced by another item in `this.items`.\n * @param {string} id The ID of the element to unobserve\n */\nImpressionTracker.prototype.unobserveElement = function(id) {\n  var itemsReferencesId = this.items.some(function(item) {\n    return id == item.id;\n  });\n\n  if (!itemsReferencesId) {\n    this.intersectionObserver.unobserve(this.elementMap[id]);\n    delete this.elementMap[id];\n  }\n};\n\n\n/**\n * Sends a hit to Google Analytics with the impression data.\n * @param {string} id The ID of the element making the impression.\n */\nImpressionTracker.prototype.handleImpression = function(id) {\n  var element = document.getElementById(id);\n\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Viewport',\n    eventAction: 'impression',\n    eventLabel: id\n  };\n\n  var userFields = assign({}, this.opts.fieldsObj,\n      getAttributeFields(element, this.opts.attributePrefix));\n\n  this.tracker.send('event', createFieldsObj(defaultFields,\n      userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all listeners and observers.\n */\nImpressionTracker.prototype.remove = function() {\n  this.mutationObserver.disconnect();\n  this.intersectionObserver.disconnect();\n};\n\n\nprovide('impressionTracker', ImpressionTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"object-assign\":23}],6:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n},{\"../constants\":1,\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"debounce\":16,\"object-assign\":23}],7:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\nvar withTimeout = require('../utilities').withTimeout;\n\n\n/**\n * Registers outbound form tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundFormTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_FORM_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    formSelector: 'form',\n    shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.delegate = delegate(document, 'submit', 'form',\n      this.handleFormSubmits.bind(this), {deep: true, useCapture: true});\n}\n\n\n/**\n * Handles all submits on form elements. A form submit is considered outbound\n * if its action attribute starts with http and does not contain\n * location.hostname.\n * When the beacon transport method is not available, the event's default\n * action is prevented and re-emitted after the hit is sent.\n * @param {Event} event The DOM submit event.\n * @param {Element} form The delegated event target.\n */\nOutboundFormTracker.prototype.handleFormSubmits = function(event, form) {\n\n  var action = parseUrl(form.action).href;\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Outbound Form',\n    eventAction: 'submit',\n    eventLabel: action\n  };\n\n  if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n\n    if (!navigator.sendBeacon) {\n      // Stops the submit and waits until the hit is complete (with timeout)\n      // for browsers that don't support beacon.\n      event.preventDefault();\n      defaultFields.hitCallback = withTimeout(function() {\n        form.submit();\n      });\n    }\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(form, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, form));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a form is\n * submitted. By default, forms with an action attribute that starts with\n * \"http\" and doesn't contain the current hostname are tracked.\n * @param {Element} form The form that was submitted.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the form should be tracked.\n */\nOutboundFormTracker.prototype.shouldTrackOutboundForm =\n    function(form, parseUrl) {\n\n  var url = parseUrl(form.action);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundFormTracker.prototype.remove = function() {\n  this.delegate.destroy();\n};\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"dom-utils/lib/delegate\":18,\"dom-utils/lib/parse-url\":22,\"object-assign\":23}],8:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link its hostname property does not match location.hostname. When the beacon\n * transport method is not available, the links target is set to \"_blank\" to\n * ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"dom-utils/lib/delegate\":18,\"dom-utils/lib/parse-url\":22,\"object-assign\":23}],9:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"object-assign\":23}],10:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"object-assign\":23}],11:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\n/**\n * Adds handler for the history API methods\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction UrlChangeTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.URL_CHANGE_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!history.pushState || !window.addEventListener) return;\n\n  this.opts = assign({\n    shouldTrackUrlChange: this.shouldTrackUrlChange,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Sets the initial page field.\n  // Don't set this on the tracker yet so campaign data can be retreived\n  // from the location field.\n  this.path = getPath();\n\n  this.updateTrackerData = this.updateTrackerData.bind(this);\n\n  // Overrides history.pushState.\n  this.originalPushState = history.pushState;\n  history.pushState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalPushState.apply(history, arguments);\n    this.updateTrackerData();\n  }.bind(this);\n\n  // Overrides history.repaceState.\n  this.originalReplaceState = history.replaceState;\n  history.replaceState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalReplaceState.apply(history, arguments);\n    this.updateTrackerData(false);\n  }.bind(this);\n\n  // Handles URL changes via user interaction.\n  window.addEventListener('popstate', this.updateTrackerData);\n}\n\n\n/**\n * Updates the page and title fields on the tracker if necessary and\n * optionally sends a pageview.\n * @param {boolean} shouldSendPageview Indicates whether the tracker should\n *     send a pageview after updating the URL.\n */\nUrlChangeTracker.prototype.updateTrackerData = function(shouldSendPageview) {\n\n  // Sets the default.\n  shouldSendPageview = shouldSendPageview === false ? false : true;\n\n  // Calls the update logic asychronously to help ensure user callbacks\n  // happen first.\n  setTimeout(function() {\n\n    var oldPath = this.path;\n    var newPath = getPath();\n\n    if (oldPath != newPath &&\n        this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n\n      this.path = newPath;\n      this.tracker.set({\n        page: newPath,\n        title: isObject(history.state) && history.state.title || document.title\n      });\n\n      if (shouldSendPageview) {\n        var defaultFields = {transport: 'beacon'};\n        this.tracker.send('pageview', createFieldsObj(defaultFields,\n            this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n  }.bind(this), 0);\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit with the new page\n * data. This default implementation can be overrided in the config options.\n * @param {string} newPath The path prior to the URL change.\n * @param {string} oldPath The path after the URL change.\n * @return {boolean} Whether or not the URL change should be tracked.\n */\nUrlChangeTracker.prototype.shouldTrackUrlChange = function(newPath, oldPath) {\n  return newPath && oldPath;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nUrlChangeTracker.prototype.remove = function() {\n  window.removeEventListener('popstate', this.updateTrackerData);\n  history.replaceState = this.originalReplaceState;\n  history.pushState = this.originalPushState;\n\n  this.tracker = null;\n  this.opts = null;\n  this.path = null;\n\n  this.updateTrackerData = null;\n  this.originalReplaceState = null;\n  this.originalPushState = null;\n};\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"object-assign\":23}],12:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":1,\"./utilities\":14}],13:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n\n},{\"./constants\":1}],14:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n\n},{\"dom-utils/lib/get-attributes\":19,\"object-assign\":23}],15:[function(require,module,exports){\nmodule.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n},{}],16:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n},{\"date-now\":15}],17:[function(require,module,exports){\nvar matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n\n},{\"./matches\":20,\"./parents\":21}],18:[function(require,module,exports){\nvar closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n\n},{\"./closest\":17,\"./matches\":20}],19:[function(require,module,exports){\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n\n},{}],20:[function(require,module,exports){\nvar proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n\n},{}],21:[function(require,module,exports){\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n\n},{}],22:[function(require,module,exports){\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n\n},{}],23:[function(require,module,exports){\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],24:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Imports all sub-plugins.\nrequire('./plugins/clean-url-tracker');\nrequire('./plugins/event-tracker');\nrequire('./plugins/impression-tracker');\nrequire('./plugins/media-query-tracker');\nrequire('./plugins/outbound-form-tracker');\nrequire('./plugins/outbound-link-tracker');\nrequire('./plugins/page-visibility-tracker');\nrequire('./plugins/social-widget-tracker');\nrequire('./plugins/url-change-tracker');\n\n// Imports the deprecated autotrack plugin for backwards compatibility.\nrequire('./plugins/autotrack');\n\n},{\"./plugins/autotrack\":2,\"./plugins/clean-url-tracker\":3,\"./plugins/event-tracker\":4,\"./plugins/impression-tracker\":5,\"./plugins/media-query-tracker\":6,\"./plugins/outbound-form-tracker\":7,\"./plugins/outbound-link-tracker\":8,\"./plugins/page-visibility-tracker\":9,\"./plugins/social-widget-tracker\":10,\"./plugins/url-change-tracker\":11}]},{},[24])\n\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint no-console: [\"error\", {allow: [\"error\"]}] */\n\n\n// Imports dependencies.\nvar provide = require('../provide');\n\n\n/**\n * Warns users that this functionality is deprecated as of version 1.0\n * @deprecated\n * @constructor\n */\nfunction Autotrack() {\n  console.error('Requiring the `autotrack` plugin no longer requires all ' +\n      'sub-plugins be default. See https://goo.gl/sZ2WrW for details.');\n}\n\n\nprovide('autotrack', Autotrack);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar domReady = require('../utilities').domReady;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers impression tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction ImpressionTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.IMPRESSION_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n  this.opts = assign({\n    elements: [],\n    rootMargin: '0px',\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleDomMutations = this.handleDomMutations.bind(this);\n  this.walkNodeTree = this.walkNodeTree.bind(this);\n  this.handleIntersectionChanges = this.handleIntersectionChanges.bind(this);\n  this.observeElement = this.observeElement.bind(this);\n  this.unobserveElement = this.unobserveElement.bind(this);\n  this.startObserving = this.startObserving.bind(this);\n\n  var data = this.deriveDataFromConfigOptions();\n\n  // The primary list of elements to observe. Each item contains the\n  // element ID, threshold, and whether it's currently in-view.\n  this.items = data.items;\n\n  // A hash map of elements contained in the items array.\n  this.elementMap = data.elementMap;\n\n  // A sorted list of threshold values contained in the items array.\n  this.threshold = data.threshold;\n\n  this.intersectionObserver = this.initIntersectionObserver();\n  this.mutationObserver = this.initMutationObserver();\n\n  // Once the DOM is ready, start observing for changes.\n  domReady(this.startObserving);\n}\n\n\n/**\n * Loops through each element in the `elements` configuration option and\n * creates a map of element IDs currently being observed, a list of \"items\"\n * (which contains each element's `threshold` and `trackFirstImpressionOnly`\n * property), and a list of `threshold` values to pass to the\n * `IntersectionObserver` instance.\n * @return {Object} An object with the properties `items`, `elementMap`\n *     and `threshold`.\n */\nImpressionTracker.prototype.deriveDataFromConfigOptions = function() {\n  var items = [];\n  var elementMap = {};\n  var threshold = [];\n\n  this.opts.elements.forEach(function(item) {\n    // The item can be just a string if it's OK with all the defaults.\n    if (typeof item == 'string') item = {id: item};\n\n    items.push(item = assign({\n      threshold: 0,\n      trackFirstImpressionOnly: true\n    }, item));\n\n    elementMap[item.id] = null;\n    threshold.push(item.threshold);\n  });\n\n  return {\n    items: items,\n    elementMap: elementMap,\n    threshold: threshold\n  };\n};\n\n\n/**\n * Initializes a new `MutationObsever` instance and registers the callback.\n * @return {MutationObserver} The new MutationObserver instance.\n */\nImpressionTracker.prototype.initMutationObserver = function() {\n  return new MutationObserver(this.handleDomMutations);\n};\n\n\n/**\n * Initializes a new `IntersectionObsever` instance with the appropriate\n * options and registers the callback.\n * @return {IntersectionObserver} The newly created instance.\n */\nImpressionTracker.prototype.initIntersectionObserver = function() {\n  return new IntersectionObserver(this.handleIntersectionChanges, {\n    rootMargin: this.opts.rootMargin,\n    threshold: this.threshold\n  });\n};\n\n\n/**\n * Starts observing each eleemnt to intersections as well as the entire DOM\n * for node changes.\n */\nImpressionTracker.prototype.startObserving = function() {\n  // Start observing elements for intersections.\n  Object.keys(this.elementMap).forEach(this.observeElement);\n\n  // Start observing the DOM for added and removed elements.\n  this.mutationObserver.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n\n  // TODO(philipwalton): Remove temporary hack to force a new frame\n  // immediately after adding observers.\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n  requestAnimationFrame(function() {});\n};\n\n\n/**\n * Adds an element to the `elementMap` map and registers it for observation\n * on `this.intersectionObserver`.\n * @param {string} id The ID of the element to observe.\n */\nImpressionTracker.prototype.observeElement = function(id) {\n  var element = this.elementMap[id] ||\n      (this.elementMap[id] = document.getElementById(id));\n\n  if (element) this.intersectionObserver.observe(element);\n};\n\n\n/**\n * Handles nodes being added or removed from the DOM. This function is passed\n * as the callback to `this.mutationObserver`.\n * @param {Array} mutations A list of `MutationRecord` instances\n */\nImpressionTracker.prototype.handleDomMutations = function(mutations) {\n  for (var i = 0, mutation; mutation = mutations[i]; i++) {\n\n    // Handles added elements.\n    for (var j = 0, addedEl; addedEl = mutation.addedNodes[j]; j++) {\n      this.walkNodeTree(addedEl, this.observeElement);\n    }\n\n    // Handles removed elements.\n    for (var k = 0, removedEl; removedEl = mutation.removedNodes[k]; k++) {\n      this.walkNodeTree(removedEl, this.unobserveElement);\n    }\n  }\n};\n\n\n/**\n * Iterates through all descendents of a DOM node and invokes the passed\n * callback if any of them match an elememt in `elementMap`.\n * @param {Node} node The DOM node to walk.\n * @param {Function} callback A function to be invoked if a match is found.\n */\nImpressionTracker.prototype.walkNodeTree = function(node, callback) {\n  if (node.nodeType == 1 && node.id in this.elementMap) {\n    callback(node.id);\n  }\n  for (var i = 0, child; child = node.childNodes[i]; i++) {\n    this.walkNodeTree(child, callback);\n  }\n};\n\n\n/**\n * Handles intersection changes. This function is passed as the callback to\n * `this.intersectionObserver`\n * @param {Array} records A list of `IntersectionObserverEntry` records.\n */\nImpressionTracker.prototype.handleIntersectionChanges = function(records) {\n  for (var i = 0, record; record = records[i]; i++) {\n    for (var j = 0, item; item = this.items[j]; j++) {\n      if (record.target.id !== item.id) continue;\n\n      var itemWasPreviouslyVisible = item.visible;\n      item.visible = (item.threshold === 0) ? !itemWasPreviouslyVisible :\n          record.intersectionRatio >= item.threshold;\n\n      if (item.visible && !itemWasPreviouslyVisible) {\n        this.handleImpression(item.id);\n\n        if (item.trackFirstImpressionOnly) {\n          this.items.splice(j, 1);\n          j--;\n          this.unobserveElement(item.id);\n        }\n      }\n    }\n  }\n\n  // If all items have been removed, remove the plugin.\n  if (this.items.length === 0) this.remove();\n};\n\n\n/**\n * Accpets an element ID that should be unobserved and does so unless it's\n * still referenced by another item in `this.items`.\n * @param {string} id The ID of the element to unobserve\n */\nImpressionTracker.prototype.unobserveElement = function(id) {\n  var itemsReferencesId = this.items.some(function(item) {\n    return id == item.id;\n  });\n\n  if (!itemsReferencesId) {\n    this.intersectionObserver.unobserve(this.elementMap[id]);\n    delete this.elementMap[id];\n  }\n};\n\n\n/**\n * Sends a hit to Google Analytics with the impression data.\n * @param {string} id The ID of the element making the impression.\n */\nImpressionTracker.prototype.handleImpression = function(id) {\n  var element = document.getElementById(id);\n\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Viewport',\n    eventAction: 'impression',\n    eventLabel: id\n  };\n\n  var userFields = assign({}, this.opts.fieldsObj,\n      getAttributeFields(element, this.opts.attributePrefix));\n\n  this.tracker.send('event', createFieldsObj(defaultFields,\n      userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all listeners and observers.\n */\nImpressionTracker.prototype.remove = function() {\n  this.mutationObserver.disconnect();\n  this.intersectionObserver.disconnect();\n};\n\n\nprovide('impressionTracker', ImpressionTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\nvar withTimeout = require('../utilities').withTimeout;\n\n\n/**\n * Registers outbound form tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundFormTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_FORM_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    formSelector: 'form',\n    shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.delegate = delegate(document, 'submit', 'form',\n      this.handleFormSubmits.bind(this), {deep: true, useCapture: true});\n}\n\n\n/**\n * Handles all submits on form elements. A form submit is considered outbound\n * if its action attribute starts with http and does not contain\n * location.hostname.\n * When the beacon transport method is not available, the event's default\n * action is prevented and re-emitted after the hit is sent.\n * @param {Event} event The DOM submit event.\n * @param {Element} form The delegated event target.\n */\nOutboundFormTracker.prototype.handleFormSubmits = function(event, form) {\n\n  var action = parseUrl(form.action).href;\n  var defaultFields = {\n    transport: 'beacon',\n    eventCategory: 'Outbound Form',\n    eventAction: 'submit',\n    eventLabel: action\n  };\n\n  if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n\n    if (!navigator.sendBeacon) {\n      // Stops the submit and waits until the hit is complete (with timeout)\n      // for browsers that don't support beacon.\n      event.preventDefault();\n      defaultFields.hitCallback = withTimeout(function() {\n        form.submit();\n      });\n    }\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(form, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, form));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a form is\n * submitted. By default, forms with an action attribute that starts with\n * \"http\" and doesn't contain the current hostname are tracked.\n * @param {Element} form The form that was submitted.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the form should be tracked.\n */\nOutboundFormTracker.prototype.shouldTrackOutboundForm =\n    function(form, parseUrl) {\n\n  var url = parseUrl(form.action);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundFormTracker.prototype.remove = function() {\n  this.delegate.destroy();\n};\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link its hostname property does not match location.hostname. When the beacon\n * transport method is not available, the links target is set to \"_blank\" to\n * ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\n/**\n * Adds handler for the history API methods\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction UrlChangeTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.URL_CHANGE_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!history.pushState || !window.addEventListener) return;\n\n  this.opts = assign({\n    shouldTrackUrlChange: this.shouldTrackUrlChange,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Sets the initial page field.\n  // Don't set this on the tracker yet so campaign data can be retreived\n  // from the location field.\n  this.path = getPath();\n\n  this.updateTrackerData = this.updateTrackerData.bind(this);\n\n  // Overrides history.pushState.\n  this.originalPushState = history.pushState;\n  history.pushState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalPushState.apply(history, arguments);\n    this.updateTrackerData();\n  }.bind(this);\n\n  // Overrides history.repaceState.\n  this.originalReplaceState = history.replaceState;\n  history.replaceState = function(state, title) {\n    // Sets the document title for reference later.\n    // TODO(philipwalton): consider using WeakMap for this to not conflict\n    // with any user-defined property also called \"title\".\n    if (isObject(state) && title) state.title = title;\n\n    this.originalReplaceState.apply(history, arguments);\n    this.updateTrackerData(false);\n  }.bind(this);\n\n  // Handles URL changes via user interaction.\n  window.addEventListener('popstate', this.updateTrackerData);\n}\n\n\n/**\n * Updates the page and title fields on the tracker if necessary and\n * optionally sends a pageview.\n * @param {boolean} shouldSendPageview Indicates whether the tracker should\n *     send a pageview after updating the URL.\n */\nUrlChangeTracker.prototype.updateTrackerData = function(shouldSendPageview) {\n\n  // Sets the default.\n  shouldSendPageview = shouldSendPageview === false ? false : true;\n\n  // Calls the update logic asychronously to help ensure user callbacks\n  // happen first.\n  setTimeout(function() {\n\n    var oldPath = this.path;\n    var newPath = getPath();\n\n    if (oldPath != newPath &&\n        this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n\n      this.path = newPath;\n      this.tracker.set({\n        page: newPath,\n        title: isObject(history.state) && history.state.title || document.title\n      });\n\n      if (shouldSendPageview) {\n        var defaultFields = {transport: 'beacon'};\n        this.tracker.send('pageview', createFieldsObj(defaultFields,\n            this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n  }.bind(this), 0);\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit with the new page\n * data. This default implementation can be overrided in the config options.\n * @param {string} newPath The path prior to the URL change.\n * @param {string} oldPath The path after the URL change.\n * @return {boolean} Whether or not the URL change should be tracked.\n */\nUrlChangeTracker.prototype.shouldTrackUrlChange = function(newPath, oldPath) {\n  return newPath && oldPath;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nUrlChangeTracker.prototype.remove = function() {\n  window.removeEventListener('popstate', this.updateTrackerData);\n  history.replaceState = this.originalReplaceState;\n  history.pushState = this.originalPushState;\n\n  this.tracker = null;\n  this.opts = null;\n  this.path = null;\n\n  this.updateTrackerData = null;\n  this.originalReplaceState = null;\n  this.originalPushState = null;\n};\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","var matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n","var closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n","var proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n","var HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"],"sourceRoot":"/source/"}